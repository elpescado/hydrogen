environment:
  #VCPKG_DEFAULT_TRIPLET: "x64-windows"
  APPVEYOR_SAVE_CACHE_ON_ERROR: true
  matrix:
     - ENV_NAME: MinGW 32
       COMPILER: MinGW
       VCPKG_DEFAULT_TRIPLET: "x86-windows"
       QTDIR: "C:\\Qt\\5.11.1\\mingw53_32"
       GENERATOR: "MinGW Makefiles"
       SDK: "C:\\mingw-w64\\i686-5.3.0-posix-dwarf-rt_v4-rev0\\mingw32\\bin"

#    - ENV_NAME: MSVC 32
#      COMPILER: MSVC
#      VCPKG_DEFAULT_TRIPLET: "x86-windows"
#      QTDIR: "C:\\Qt\\5.11.1\\msvc2015"
#      GENERATOR: "Visual Studio 14 2015"
#      SDK: ""

#    - ENV_NAME: MSVC 64
#      COMPILER: MSVC
#      APPVEYOR_BUILD_WORKER_IMAGE: Visual Studio 2017
#      PLATFORM: x64
#      VCPKG_DEFAULT_TRIPLET: "x64-windows"
#      QTDIR: "C:\\Qt\\5.11.1\\msvc2017_64"
#      GENERATOR: "Visual Studio 15 2017 Win64"
#      SDK: ""

image:
  - "Visual Studio 2015"

before_build:
  cmd: |-
      echo %PATH%
      rem set PATH=C:\msys64\MINGW64\bin;C:\msys64\usr\bin;%PATH%
      c:\msys64\usr\bin\pacman -Ss libarchive
      c:\msys64\usr\bin\pacman -Ss libsndfile
      c:\msys64\usr\bin\pacman -Ss cppunit
      c:\msys64\usr\bin\pacman -Ss portaudio
      c:\msys64\usr\bin\pacman -Ss pthreads
      c:\msys64\usr\bin\pacman --noconfirm --needed  -S mingw32/mingw-w64-i686-libarchive mingw32/mingw-w64-i686-libsndfile mingw32/mingw-w64-i686-cppunit mingw32/mingw-w64-i686-portaudio mingw32/mingw-w64-i686-libwinpthread-git mingw32/mingw-w64-i686-pkg-config
      rem c:\msys64\usr\bin\pacman -Ql mingw-w64-i686-libarchive mingw-w64-i686-libsndfile mingw-w64-i686-cppunit mingw-w64-i686-portaudio mingw-w64-i686-libwinpthread-git mingw-w64-i686-pkg-config
      bash -lc "find c:/msys64 -name '*.cmake' -print"
      bash -lc "find c:/msys64 -name '*.pc' -print"
      bash -lc "find c:/msys64 -name 'pkg-config.exe' -print"
      set CMAKE_PREFIX_PATH=%QTDIR%
      set PATH=c:\msys64\mingw32\bin;%SDK%;%PATH%
      set PKG_CONFIG_PATH="c:\msys64\mingw32\lib\pkgconfig"
      rename "C:\Program Files\Git\usr\bin\sh.exe" "sh2.exe"
      echo %PATH%

      rem vcpkg install libarchive libsndfile portaudio pthreads cppunit
      rem vcpkg integrate install
      rem tree C:\tools\vcpkg\installed /a /f
      mkdir build
      cd build
      cmake --version
      if [%COMPILER%]==[MSVC]  cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=c:/tools/vcpkg/scripts/buildsystems/vcpkg.cmake -G "%GENERATOR%" ..
      if [%COMPILER%]==[MinGW] cmake -G "%GENERATOR%" ..
      rem bash -lc "i586-mingw32msvc-objdump -p  src/tests/tests.exe | grep 'DLL Name:'"
      dir
      appveyor PushArtifact CMakeCache.txt

build:
  verbosity: detailed

build_script:
  - cmd: |-
      if [%COMPILER%]==[MSVC]  cmake --build . --target ALL_BUILD -- /maxcpucount:4
      if [%COMPILER%]==[MinGW] cmake --build . 
      echo %PATH%
      rem src\tests\tests.exe
      cpack -G NSIS
      appveyor PushArtifact Hydrogen-*.exe


cache:
  - C:\tools\vcpkg\installed -> .appveyor.yml

artifacts:
  - path: build
    name: CMakeCache.txt
